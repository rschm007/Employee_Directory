{"version":3,"sources":["components/Header/index.js","utils/API.js","components/TableRow/index.js","components/Search/index.js","components/SortColumn/index.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","API","getUser","axios","get","getUsers","num","styles","TableRow","props","regDate","Date","registered","toDateString","src","thumbnail","alt","name","first","last","username","email","phone","age","Search","value","search","onChange","handleInputChange","type","placeholder","SortColumn","children","icon","data-direction","direction","data-column","column","onClick","Table","users","map","user","index","picture","login","location","dob","date","library","add","faChevronDown","faChevronUp","App","useState","setUsers","filteredUsers","setFilteredUsers","setSearch","sort","sortedColumn","setSortColumn","useEffect","then","res","data","results","catch","err","console","log","event","filter","startsWith","target","newSort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c34812c0.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n      <header className=\"w-full flex-none\">\r\n        <div className=\"lg:text-center py-8 bg-indigo-900\">\r\n          <h1 className=\"text-4xl text-white font-bold tracking-wide\">\r\n            Employee Directory\r\n          </h1>\r\n          <p className=\"mt-2 text-base text-gray-300\">\r\n            Search for any employee, or use the column headers to sort by\r\n            category.\r\n          </p>\r\n        </div>\r\n      </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Random User API\r\nconst API = {\r\n  getUser: function () {\r\n    return axios.get(\"https://randomuser.me/api/\");\r\n  },\r\n  // get multiple users but set results to only English-speaking countries because I am an ugly American who only speaks English\r\n  getUsers: function (num) {\r\n    return axios.get(`https://randomuser.me/api/?nat=us,gb,au&results=${num}`);\r\n  },\r\n};\r\n\r\nexport default API;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  tdStyles: \"px-10 py-2 whitespace-nowrap border border-gray-300\",\r\n  divOneStyles: \"items-center\",\r\n  divTwoStyles: \"h-10 w-10\",\r\n  imgStyles: \"h-10 w-10 rounded-sm\",\r\n  nameDivStyles: \"ml-4\",\r\n  textStyles: \"text-sm font-base text-gray-900\",\r\n};\r\n\r\nconst TableRow = (props) => {\r\n  const regDate = new Date(props.registered).toDateString();\r\n  return (\r\n    <tr>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.divOneStyles}>\r\n          <div className={styles.divTwoStyles}>\r\n            <img\r\n              className={styles.imgStyles}\r\n              src={props.thumbnail}\r\n              alt={props.name.first + \" \" + props.name.last}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.nameDivStyles}>\r\n          <div className={styles.textStyles}>\r\n            {props.name.first + \" \" + props.name.last}\r\n          </div>\r\n          <div className={styles.textStyles}>{props.username}</div>\r\n        </div>\r\n      </td>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.textStyles}>{props.email}</div>\r\n      </td>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.textStyles}>{props.phone}</div>\r\n      </td>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.textStyles}>{props.age}</div>\r\n      </td>\r\n      <td className={styles.tdStyles}>\r\n        <div className={styles.textStyles}>{regDate}</div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <form className=\"mt-1 justify-center\">\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name={props.name}\r\n          type=\"text\"\r\n          className=\"rounded-lg p-1 w-auto border text-sm text-gray-800 border-gray-200 bg-white\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SortColumn = (props) => {\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <FontAwesomeIcon\r\n        icon={props.icon}\r\n        className=\"mx-2 cursor-pointer\"\r\n        data-direction={props.direction} // identifies which direction the props.arrow is pointing\r\n        data-column={props.column} // identifies which column the user clicked on\r\n        onClick=\r\n        {props.onClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortColumn;\r\n","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport TableRow from \"../TableRow\";\r\nimport Search from \"../Search\";\r\nimport SortColumn from \"../SortColumn\";\r\n\r\nconst styles = {\r\n  thStyles: \"p-5 text-left\",\r\n};\r\n\r\nconst Table = (props) => {\r\n  // create props for rendering rows - map users into rows\r\n  const renderRows = (users) => {\r\n    return users.map((user, index) => {\r\n      return (\r\n        <TableRow\r\n          thumbnail={user.picture.thumbnail}\r\n          name={user.name}\r\n          username={user.login.username}\r\n          email={user.email}\r\n          phone={user.phone}\r\n          location={user.location}\r\n          age={user.dob.age}\r\n          registered={user.registered.date}\r\n          key={index}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"table w-auto flex-none m-10 rounded-sm border-2 border-light-blue-500 border-opacity-25\">\r\n      <table className=\"table-auto\">\r\n        <thead className=\"bg-gray-200\">\r\n          <tr>\r\n            <th className={styles.thStyles}>Image</th>\r\n\r\n            <th className={styles.thStyles}>\r\n              <SortColumn\r\n                column=\"name\"\r\n                icon={props.icon}\r\n                onClick={props.onClick}\r\n                // arrow={props.arrow}\r\n              >\r\n                Name\r\n              </SortColumn>\r\n              <Search\r\n                handleInputChange={props.handleInputChange}\r\n                search={props.name}\r\n                name=\"name\"\r\n              />\r\n            </th>\r\n\r\n            <th className={styles.thStyles}>\r\n              {/* <SortColumn> */}\r\n              Email\r\n              {/* </SortColumn> */}\r\n              {/* <Search handleInputChange={props.handleInputChange} search={props.email} name=\"email\" /> */}\r\n            </th>\r\n\r\n            <th className={styles.thStyles}>\r\n              {/* <SortColumn> */}\r\n              Phone\r\n              {/* </SortColumn> */}\r\n              {/* <Search handleInputChange={props.handleInputChange} search={props.phone} name=\"phone\" /> */}\r\n            </th>\r\n\r\n            <th className={styles.thStyles}>\r\n              {/* <SortColumn> */}\r\n              Age\r\n              {/* </SortColumn> */}\r\n              {/* <Search handleInputChange={props.handleInputChange} search={props.age} name=\"age\" /> */}\r\n            </th>\r\n\r\n            <th className={styles.thStyles}>\r\n              {/* <SortColumn> */}\r\n              Date Registered\r\n              {/* </SortColumn> */}\r\n              {/* <Search handleInputChange={props.handleInputChange} search={props.reg} name=\"reg\" /> */}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderRows(props.users)}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Table from \"./components/Table\";\r\nimport API from \"./utils/API\";\r\n// import fontawesome icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faChevronDown, faChevronUp);\r\n\r\nfunction App() {\r\n  // set states\r\n  const [users, setUsers] = useState([]); // user state (gathers all users) --- equiv: users = [];\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [search, setSearch] = useState({\r\n    name: \"\",\r\n    // email: \"\",\r\n    // phone: \"\",\r\n    // age: \"\",\r\n    // reg: \"\",\r\n  });\r\n  const [sortedColumn, setSortColumn] = useState({\r\n    sort: \"desc\",\r\n  });\r\n\r\n  // hook to get list of users from API\r\n  useEffect(() => {\r\n    API.getUsers(12)\r\n      .then((res) => {\r\n        // capture json data\r\n        setUsers(res.data.results); // equiv users = res.data.results; reassigns values of var\r\n        setFilteredUsers(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // function for handling search queries on search inputs\r\n  const handleInputChange = (event) => {\r\n    const filteredUsers = users.filter((user) =>\r\n      user.name.first.startsWith(event.target.value)\r\n    );\r\n    setFilteredUsers(filteredUsers);\r\n    setSearch({\r\n      ...search,\r\n      [event.target.name]: event.target.value, // e.target.name = event target string name; e.target.value = keydown\r\n    });\r\n  };\r\n\r\n  // function for handling sorting of columns\r\n  const handleSortClick = (event) => {\r\n    // set a new sort object\r\n    let newSort = { ...sortedColumn };\r\n\r\n    if (newSort.sort === \"desc\") {\r\n      users.sort((a, b) => a.name.first > b.name.first ? 1 : -1);\r\n      setSortColumn({\r\n        sort: \"asc\",\r\n      });\r\n    } else if (newSort.sort === \"asc\") {\r\n      users.sort((a, b) => a.name.first < b.name.first ? 1 : -1);\r\n      setSortColumn({\r\n        sort: \"desc\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // function for handling which arrow to pass as a prop\r\n  const handleArrowDirection = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"App flex-auto mx-auto\">\r\n      <div className=\"wrapper\">\r\n        <Header />\r\n        <Table\r\n          icon={faChevronDown}\r\n          users={filteredUsers}\r\n          handleInputChange={handleInputChange}\r\n          {...search}\r\n          onClick={handleSortClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}